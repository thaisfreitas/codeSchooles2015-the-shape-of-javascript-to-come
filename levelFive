//section 1 - implementing-a-method-on-a-class
class TopicReplyCounter {

  constructor(topicId, replies){
    this.topicId = topicId;
    this.replies = replies || [];
    this.replyCount = this.replies.length;
  }

  addReply(reply){
    this.replies.push(reply);
    this.replyCount = this.totalReplies().length;
  }

  totalReplies(){
    return this.replies.filter( reply => !reply.isAbuse );
  }

  totalCount(){
    return this.replyCount;
  }
}
// section 1 - from-function-to-class

class TagManager {

  constructor (topicId){
    this.topicId = topicId;
  }

  addTag(tagName){
    API.createTag(tagName, this.topicId);
  }

  removeTag(tagName){
    API.deleteTag(tagName, this.topicId);
  }
}

// section 1  - subclassing

class SidebarAdvertisement extends Advertisement {
  constructor(title, link){
     super(title, link);
  }

  _linkText(){
    return "Sign up now!";
  }

}
