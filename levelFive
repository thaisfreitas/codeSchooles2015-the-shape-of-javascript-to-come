//section 1 - implementing-a-method-on-a-class
class TopicReplyCounter {

  constructor(topicId, replies) {
    this.topicId = topicId;
    this.replies = replies || [];
    this.replyCount = this.replies.length;
  }

  addReply(reply) {
    this.replies.push(reply);
    this.replyCount = this.totalReplies().length;
  }

  totalReplies() {
    return this.replies.filter(reply => !reply.isAbuse);
  }

  totalCount() {
    return this.replyCount;
  }
}
// section 1 - from-function-to-class

class TagManager {

  constructor(topicId) {
    this.topicId = topicId;
  }

  addTag(tagName) {
    API.createTag(tagName, this.topicId);
  }

  removeTag(tagName) {
    API.deleteTag(tagName, this.topicId);
  }
}

// section 1  - subclassing

class SidebarAdvertisement extends Advertisement {
  constructor(title, link) {
    super(title, link);
  }

  _linkText() {
    return "Sign up now!";
  }

}

//level 5 - section 2 - importing -modules
import isTopicValid from './is-topic-valid.js';

let topic = {
  title: "ES2015",
  author: {
    name: "Sam",
    isBlocked: false
  }
};

isTopicValid(topic);

// section 2 - named exports
function isTopicValid(topic) {
  const MAX_TITLE_LENGTH = 20;

  let isValid = !(topic.title.length > MAX_TITLE_LENGTH || topic.author.isBlocked);
  return isValid;
}

function isEmailAuthorized(email) {
  const EMAIL_DOMAIN = "@codeschool.com";
  return email.indexOf(EMAIL_DOMAIN) > 0;
}
export {
  isTopicValid, isEmailAuthorized
};
//section 2 - importing named exports
import {
  isTopicValid, isEmailAuthorized
}
from "./validators";

let author = {
  name: "Sam",
  email: "sam@codeschool.com",
  isBlocked: false
};
let topic = {
  title: "ES2015",
  author
};

isTopicValid(topic);
isEmailAuthorized(author.email);

//section 3 -  exporting consants
const MAX_TITLE_LENGTH = 20;
const EMAIL_DOMAIN = "@codeschool.com";

export {
  MAX_TITLE_LENGTH, EMAIL_DOMAIN
};

// section 3 - loading classes from modules
import TagManager from "./tag-manager-class";

let tagManager = new TagManager(20);
tagManager.addTag("JavaScript");
